/*!
 * TextToClipboard - A JavaScript library providing text copying clipboard.
 *
 * @file
 * This library implements a button functionality to copy content from a specified textarea to the clipboard.
 * When the copy operation is successful, a temporary message is displayed to provide feedback to the user.
 *
 * @version 1.0.0
 * @license MIT
 *
 * @copyright 2023 (C) Kaleid Pixel
 * @author KAZUKI Otsuhata
 *
 * @example
 * // Example of initializing the library
 * new CopyButtonLibrary({
 *     copyButtonClass: 'myCopyButton', // Custom class name for the copy button
 *     copiedClass: 'myCopiedMessage',  // Custom class name for the copied message
 *     textBodyClass: 'myTextBody'      // Custom class name for the textarea containing the text to copy
 * });
 *
 * @param {Object} options - Configuration options for the library
 * @param {string} [options.copyButtonClass='copyBtn'] - CSS class name for the button with the copy functionality
 * @param {string} [options.copiedClass='copied']      - CSS class name for the element displaying the copied message
 * @param {string} [options.textBodyClass='textBody']  - CSS class name for the textarea containing the text to be copied
 */
!function(){"use strict";function t(t){this.options=Object.assign({copyButtonClass:"copyBtn",copiedClass:"copied",textBodyClass:"textBody"},t),this.init()}t.prototype.init=function(){for(var t=document.querySelectorAll(".".concat(this.options.copyButtonClass)),o=document.querySelectorAll(".".concat(this.options.copiedClass)),s=document.querySelectorAll(".".concat(this.options.textBodyClass)),n=0;n<t.length;n++){var c=this.generateHash();t[n].classList.add("".concat(this.options.copyButtonClass,"-").concat(c)),o[n]&&o[n].classList.add("".concat(this.options.copiedClass,"-").concat(c)),s[n]&&s[n].classList.add("".concat(this.options.textBodyClass,"-").concat(c))}this.setupCopyButtons()},t.prototype.generateHash=function(){return Math.random().toString(36).slice(2,11)},t.prototype.setupCopyButtons=function(){for(var t=document.querySelectorAll(".".concat(this.options.copyButtonClass)),o=0;o<t.length;o++)t[o].addEventListener("click",function(t){return function(){this.copyText(t)}.bind(this)}.call(this,t[o]))},t.prototype.copyText=function(t){var o=t.className.match(new RegExp(this.options.copyButtonClass+"-(\\w+)"))[1],s=document.querySelector(".".concat(this.options.textBodyClass,"-").concat(o)).value,n=this;navigator.clipboard.writeText(s).then((function(){n.showCopiedMessage(t,o)})).catch((function(t){console.error("Failed to copy to clipboard: ",t)}))},t.prototype.showCopiedMessage=function(t,o){var s=document.querySelector(".".concat(this.options.copiedClass,"-").concat(o));s&&(s.style.display="block",setTimeout((function(){s.style.display="none"}),1e3))},window.TextToClipboard=t}();
//# sourceMappingURL=TextToClipboard.min.js.map